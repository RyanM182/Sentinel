let starttime = (90d); 
CloudAppEvents 
| where TimeGenerated >ago(starttime) 
| where ActionType == "CaseAdded" 
| extend Case_ = tostring(RawEventData.Case) 
| extend NewCaseId = tostring(parse_json(tostring(RawEventData.ExtendedProperties))[0].Value) 
| join kind=inner (CloudAppEvents 
| where ActionType in~ ("QueryCreated","QueryUpdate","SearchStarted","SearchReport") 
| extend CaseName = tostring(RawEventData.Case) 
| extend StampedCaseId = tostring(RawEventData.CaseId) 
| extend Name_ = tostring(RawEventData.Name) 
| extend NonCustodianSourceIds_ = tostring(parse_json(tostring(RawEventData.NonCustodianSourceIds))) 
| extend QueryId_ = tostring(RawEventData.QueryId) 
| extend QueryText_ = tostring(RawEventData.QueryText) 
| extend CreationDateTime_ = tostring(parse_json(tostring(RawEventData.Sources))[0].CreationDateTime) 
| extend HoldOperationStatus_ = tostring(parse_json(tostring(RawEventData.Sources))[0].HoldOperationStatus) 
| extend IsDisabledForSearch_ = tostring(parse_json(tostring(RawEventData.Sources))[0].IsDisabledForSearch) 
| extend IsDistributionGroup_ = tostring(parse_json(tostring(RawEventData.Sources))[0].IsDistributionGroup) 
| extend LastModificationDateTime_ = tostring(parse_json(tostring(RawEventData.Sources))[0].LastModificationDateTime) 
| extend Location_ = tostring(parse_json(tostring(RawEventData.Sources))[0].Location) 
| extend LocationType_ = tostring(parse_json(tostring(RawEventData.Sources))[0].LocationType) 
| extend OnHold_ = tostring(parse_json(tostring(RawEventData.Sources))[0].OnHold) 
| extend SourceCategory_ = tostring(parse_json(tostring(RawEventData.Sources))[0].SourceCategory) 
| extend UseLocationAsIs_ = tostring(parse_json(tostring(RawEventData.Sources))[0].UseLocationAsIs) 
| extend Workload_ = tostring(parse_json(tostring(RawEventData.Sources))[0].Workload) 
| extend UserId_ = tostring(RawEventData.UserId) 
| extend Name_ = tostring(RawEventData.Name) 
) on $left.NewCaseId == $right.StampedCaseId 